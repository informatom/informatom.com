I"ﬁ<h2 id="erp-schnittstelle-im-echtbetrieb">ERP-Schnittstelle im Echtbetrieb</h2>

<p>Zum ersten Mal betreiben wir des System gegen ein produktives
ERP-System. Das Anlegen und Modifizieren von Daten will also nun wohl
√ºberlegt sein. Vorweg genommen, alle Modifikationen im ERP-System sind
erfolgreich.</p>

<p>Beim ERP System handelt es sich um ein Mesonic-System, wir kommunizieren
unmittelbar mit der zugrunde liegenden Datenbank, einem Microsoft SQL
Server. Wir verwenden als Datenbankadapter das Activerecord
SQLAdapter-Gem
(<a href="https://github.com/rails-sqlserver/activerecord-sqlserver-adapter">https://github.com/rails-sqlserver/activerecord-sqlserver-adapter</a>) mit
dem wir in allen Tests bislang gute Erfahrungen gemacht haben.
Allerdings waren auch alle Schreibtests aus Rails 3.x Systemen. Und
prompt gibt es Schwierigkeiten. Activerecord-SQLAdapter ist eigentlich
nur der Vermittler zwischen dem Rails Modul Activerecord und dem Ruby
Datenbanktreiber Addon TinyTDS
(<a href="https://github.com/rails-sqlserver/tiny\_tds">https://github.com/rails-sqlserver/tiny\_tds</a>), was die Abstraktion
erh√∂ht, das Debuggen aber erschwert.</p>

<p>Ein Blick in die Github Issues zum Gem rettet uns schlie√ülich, andere
Entwickler haben bereits das selbe Problem erfahren und einen Workaround
entwickelt, den auch wir erfolgreich einsetzen k√∂nnen.</p>

<h2 id="weiteres">Weiteres</h2>

<p>Da wir zun√§chst gehofft hatten, nur einen Versionskonflikt der
beteiligten Komponenten vor uns zu haben, haben wir nun auch alle
Systemkomponenten auf Letztstand gebracht, voraussichtlich zum
vorletzten Mal vor dem Produktivstart.</p>

<p>Konkret k√∂nnen wir nun Accounts aus Mercator nach Mesonic √ºbertragen,
f√ºr Mesonic gesprochen bedeutet dies, dass wir einen Interessent
anlegen.</p>

<p>Wir laden allgemeine, gruppen- und personenspezifische Preise und
Versandkosten. Weiters importieren wir den aktuellen Stand der
Rechnungsadressen.</p>

<p>Ein etwas merkw√ºrdiger Fehler im Berechtigungswesen l√§sst uns kurz an
uns selbst zweifeln: Je h√∂her die Rolle in Mercator, desto geringer
hatten wir die Berechtigung vergeben.</p>

<p>Dar√ºber hinaus machen wir eine Menge Performancetests und sehen keine
Probleme diesbez√ºglich f√ºr den Produktivbetrieb auf uns zu kommen.</p>

<p>Das installierte System reagiert nun korrekt auf die Aufrufe der zum
Einsatz kommenden Domains f√ºr Shop und Webseite der Firma, auch die
gew√ºnschten Weiterleitungen funktionieren.</p>

<p>Obwohl wir mit dem System bereits hinter einer Firewall gesch√ºtzt sind,
konfigurieren wir auf der virtuellen Maschine selbst eine solche, vor
allem als Referenz f√ºr zuk√ºnftige Systeme, die unmittelbar ungesch√ºtzt
mit dem Internet verbunden sind. Auch alle Entwicklungssysteme erhalten
eine analoge Firewallkonfiguration. Diese weniger aus
Sicherheitsgr√ºnden, sondern um alle verwendeten Netzwerkverbindungen zu
alle Fremdsystemen zu testen (die da sind: ERB, Produktdatenbank,
Zubeh√∂rkatalog, Messagingserver, Suchmaschine)</p>

<p>Um Logfiles in handlichen Gr√∂√üen zu halten, verwenden wir ab jetzt auf
allen Systemen Logfilerotation. Das bedeutet, dass im Tages- oder
Wochentakt neue Logfiles erstellt werden und die alten komprimiert
werden, um Festplattenplatz zu sparen (Logfiles lassen sich aufgrund
Ihrer Natur als reine Textfiles gew√∂hnlich um einen Faktor 10
komprimieren).</p>

<h4 id="typisches-log-verzeichnis">Typisches Log-Verzeichnis</h4>

<hr />

<p><img src="/img/blog/logfile-rotation.png" alt="Logfile Rotation" style="max-width: 100%" /></p>
<hr />

:ET