I"⁄<h2 id="icecat">Icecat</h2>

<p>In der letzten Woche haben wir ein weiteres Gem entwickelt, es dient zum
Import von Produktstammdaten (und Bildern) aus der Produktdatenbank
Icecat (&lt;ttp://icecat.at/&gt;).</p>

<p>Wir importieren nun folgende Daten komplett oder auch inkrementell
(Icecat stellt √Ñnderungen tagesaktuell zum Download zur Verf√ºgung):</p>

<ul>
  <li>Produktnamen, Produkteigenschaften, Eigenschaftsgruppen,
mehrsprachige Beschreibungstexte, Garantieinformationen,
Einige Zeit haben uns Probleme beim XML-Import gequ√§lt. Zun√§chst schien
es so, als k√§me der von uns verwendete XML-Parser Nokogiri mit
Dokumenten ab einer gewissen Gr√∂√üe nicht mehr klar.</li>
</ul>

<p>Das Einlesen der Dateien kam zu keinem Ende. Nokogiri liest Daten
zun√§chst komplett ein und baut dann die Datenstruktur im Speicher auf.</p>

<p>Wir haben ihn gegen den Parser Saxerator, der zeilenweise agiert, getauscht,
woraufhin das Problem klar wurde. In den insgesamt 1.2 GB
Daten, die wir gelesen haben, fanden sich ganze acht Zeichen, die nicht
Unicode standardkonform waren. Erst das Entfernen dieser Zeichen f√ºhrte
zum Erfolg: Knapp √ºber 1000 Eigenschaftenkategorien, 1600 Eigenschaften,
und knapp √ºber 100 000 Werte sind erfolgreich geparst und importiert.</p>

<ol>
  <li>Wir lesen dabei zun√§chst den Katalog aller verf√ºgberen Produkte der
angebotenen Marken ein.</li>
  <li>Im n√§chsten Schritt vergleichen wir die tats√§chlich gef√ºhrten
Artikel und kennzeichnen sie.</li>
  <li>Schritt 3 ist der Download der Metadaten zu diesen Produkten.</li>
  <li>
    <p>Schritt 4 parsen wir diese und speichern die Daten in unserer
Datenbank.</p>

    <p>Dieser Schritt zerlegt sich wieder in einige Unterschritte:</p>

    <ol>
      <li>Aktualisierung der Texte</li>
      <li>Aktualisierung der Bilder</li>
      <li>Eigenschaften, Eigenschaftengruppen und Werte</li>
      <li>Produktrelationen.</li>
    </ol>
  </li>
</ol>

<p>Wir halten uns an die Strukturen, die in in Icecat vorgegeben sind und
ignorieren, dass wir Eigenschaftengruppen gleicher Namen zusammenfassen
k√∂nnten. Dies wird uns sp√§ter bei der Filterung helfen.</p>

<p>Nun hatten wir ein Problem mit dem Handling von Namespaces in Hobo
Modellen und Controllern und jenem in Engines. Hier schien eine
generelle Inkompatibilit√§t vorzuliegen und wir haben wieder den Hobo
Maintainer in Spanien kontaktiert. Dieser zeigte sich verwundert, r√§umte
aber ein, dass diese Inkompatibilit√§t bestehen k√∂nnte. Nun waren wir
angespornt, der Sache auf den Grund zu gehen, mit dem Ergebnis, dass es
eine kleine Unvertr√§glichkeit gibt, diese sich aber nur im Bereich der
Erzeugung der Views mittels DRYML befindet. Wenn wir f√ºr die Modelle in
der Engine die Views explizit schreiben und nicht erzeugen lassen, sind
wir voll kompatibel.</p>

<p>Zusammengefasst bedeutet dies nur einen minimalen Mehraufwand (etwa 3
Prozent der Entwicklungszeit) in der Engine, und wir k√∂nnen weiterhin
alle Komponenten nach Wunsch kapseln.</p>

<p>Die Entwicklungen wurden selbstverst√§ndlich wieder auf das Demosystem
√ºbertragen und laufen nun dort im Produktivmodus von Ruby On Rails. Wir
haben auch wieder ein Gem erstellt und dieses auf Github und Rubygems
publiziert.</p>

<h2 id="deployment-szenario">Deployment Szenario</h2>

<p>Mit der Zunahme der Anzahl der Komponenten nimmt auch der Aufwand f√ºr
des Ausbringen auf die einzelnen Entwicklungsmaschinen und das
Demosystem h√∂her. Wir haben unterschiedliche Verfahren evaluiert und
schwanken nunmehr zwischen zwei Varianten: Capistrano
(<a href="http://capistranorb.com/">http://capistranorb.com/</a>) und Whiskey Disk
(<a href="https://github.com/flogic/whiskey\_disk">https://github.com/flogic/whiskey\_disk</a>). Capistrano ist ein m√§chtiges
Automatisierungswerkzeug, das auch Deployment beherrscht und einiges an
Lernaufwand voraussetzt. Whiskey Disk ist viel einfacher, daf√ºr auch
schneller zu lernen. Wir vertagen die Entscheidung, noch ist der
Leidensdruck nicht gro√ü genug ;-) .</p>

<h2 id="dedizierter-stunturn-server">Dedizierter STUN/TURN Server</h2>

<p>Wir wollten zur Initiierung der Videochatverbindungen auf unseren
eigenen dedizierten STUN/TURN Server umsteigen, die Installation machte
allerdings gr√∂√üere Probleme als erwartet, sodass wir weiterhin ein
externes Service verwenden.</p>

<p>Der Messaging Server l√§uft nun in einer dedizierten virtuellen Maschine
auf einer getrennten und dedizierten Subdomain
http://faye.informatom.com auf Port 80, um den in einem fr√ºheren Bericht
genannten Problem der eingeschr√§nkten Netzneutralit√§t in Firmennetzen
vorzubeugen. Die an und f√ºr sich rasche und problemlose Installation
hatte zwei Stunden Debugging zur Folge. Ein DNS-Problem, das wir
zun√§chst bei uns geglaubt hatten, lag beim Telekom Anbieter. Es war
√ºberraschend zu sehen, die die DNS-Aufl√∂sung jeweils ca. 5 Sekunden
funkionierte, dann ebensolange wieder scheiterte.</p>

<h2 id="mesonic-schnittstelle">Mesonic Schnittstelle</h2>

<ul>
  <li>Zahlungsarten und Versandkosten sind nun kundenspezifisch (beim
Zur√ºckenden der Zahlungsart gibt es aber noch ein Problem).
Zus√§tzlich haben wir eine Installationsanleitung f√ºr die
Schnittstelle geschrieben.</li>
  <li>Der Updatejob der Best√§nde wurde deutlich beschleunigt und erfolgt
am Demosystem automatisch.</li>
  <li>Vor jedem Job findet nun ein Test der Netzwerkverbindung zum
ERP-System statt.</li>
  <li>Die einzelnen Schritte aller Jobs loggen wir nun in ein Joblog, aus
dem unmittelbar erkennbar ist, ob Jobs abgebrochen sind.</li>
</ul>

<h2 id="das-aktuelle-datenbankschema">Das aktuelle Datenbankschema</h2>

<p>Zur Evaluation haben wir uns das aktuelle Datenbankschema genauer
angesehen und auch grafisch dargestellt:</p>

<hr />

<p><img src="/img/blog/Mercator_ERD_incl_Gems.png" alt="ERD" style="max-width: 100%" /></p>
<hr />

<h2 id="diverse-√§nderungen">Diverse √Ñnderungen</h2>

<ul>
  <li>Ein Update der Attachment und Asset- Komponente Paperclip zwingt uns
nun dazu, die erlaubten hochladbaren Dateitypen zu deklarieren.</li>
  <li>Verwaiste Accounts werden nun automatisch gel√∂scht.</li>
</ul>
:ET