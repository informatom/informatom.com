I"ò<h2 id="authentifizierung-√ºber-mehrere-domains-hinweg">Authentifizierung √ºber mehrere Domains hinweg</h2>

<p>Manchmal glaubt man als Entwickler die Welt nicht mehr zu verstehen.
Manche Browser schienen hin und wieder grundlos die Anmeldeinformationen
in Mercator zu verlieren. Und noch merkw√ºrdiger: Manchmal schienen diese
Anmeldeinformationen auch wieder zur√ºckzukommen. Als einer unserer
Entwickler wider diese Situation erlebt hat, ist er der Sache auf den
Grund gegangen:</p>

<p>Wir verwenden zur Wiedererkennung angemeldeter Benutzer Cookies. Diese
Cookies enthalten Informationen zur Session und sind domainspezifisch, worin der Schl√ºssel des Problems liegt.</p>

<h3 id="beispiel-cookie">Beispiel-Cookie</h3>

<hr />

<p><img src="/img/blog/cookie.png" alt="Cookie" style="max-width: 100%" /></p>
<hr />

<p>Die Mercator-Instanz, bei der das Problem wieder aufgetreten ist, ist
ein Staging System bei einem Kunden, der unterschiedliche Domains f√ºr
Webshop und sonstige Domain verwendet, also etwa:
<code class="highlighter-rouge">http://company-shop.com</code> und <code class="highlighter-rouge">http://company.com</code>.</p>

<p>Bislang waren alle Systeme derart beschaffen, dass die beiden Teile auf
unterschiedlichen Subdomains der selben Domain gelaufen sind, also
<code class="highlighter-rouge">http://shop.company.com</code> und <code class="highlighter-rouge">http://www.company.com</code>. Wir haben die
Cookies der Applikation - um dies zu erm√∂glichen - richtiger Weise
domainspezifisch konfiguriert und nicht subdomainspezifisch.</p>

<p>Ein Teilen eines Cookies √ºber Domaingrenzen hinweg - und des w√ºrden wir
hier ben√∂tigen - ist aber aus Sicherheitsgr√ºnden technisch im Standard
f√ºr Cookies verboten.</p>

<p>Die Situation ist in sofern nicht dramatisch, als der einzig relevante
St√∂rfall jener ist, wo ein Kunde eines Shops sich einen oder mehrere
Artikel in den Warenkorb legt und sich in Folge auf den CMS-Seiten
informiert. Dann ist der Warenkorb pl√∂tzlich wieder leer (da der Konnex
zum User in der Datenbank nicht mehr hergestellt werden kann). Bewegt er
sich wieder in den Shopbereich, ist auch der Warenkorb wieder gef√ºllt.
(Wir haben in weiterer Folge auch tats√§chlich Webshops ‚Äòin the wild‚Äô
gefunden, die dieses Problem haben.) Es ist aber jedenfalls verwirrend.</p>

<p>Wir ben√∂tigen, um die Situation wirklich zu bereinigen eine Form von
Single Sign On zwischen den beiden Domains, aus Browsersicht zwischen
den beiden Domains. Eine echte SSO Infrastruktur aufzuziehen, erfordert
einiges an Aufwand, wir m√ºssten hier Hobo deutlich erweitern. Nach
einiger Recherche sind wir zu einer L√∂sung ohne allzu gro√üen Aufwand
gekommen:</p>

<p>Wechselt ein User zwischen der Bereichen durch Klick auf einen Link, so
leiten wir ihn auf die richtige Domain in der Applikation um. Wir kennen
zu diesen Zeitpunkt noch die korrekten Anmeldeinformationen. Wir k√∂nnen
daher zu diesem Zeitzunkt ein zeitlich begrenzt g√ºltiges Token
erstellen, das wir dem umgeleiteten URL hintanstellen und in der
Datenbank ablegen. Dieses Token verwenden wir beim Behandeln des
n√§chsten, des umgeleiteten Requests zu korrekten Anmeldung des Users
womit er auch ein Cookie f√ºr die zweite Domain erh√§lt. Damit ist er an
jeder Stelle der Applikation korrekt angemeldet.</p>

<h3 id="remember-token">Remember Token</h3>

<hr />

<p><img src="/img/blog/token.png" alt="Token" style="max-width: 100%" /></p>
<hr />

<h3 id="vermischtes">Vermischtes</h3>

<ul>
  <li>Wir haben Fortschritte bei Portierung auf Twitter Bootstrap 3
gemacht und verwenden es nun im Frontend und im Backend komplett.</li>
  <li>Wir haben einige DRYML-Helpertags erstellt, um die
Templateerstellung weiter zu vereinfachen.</li>
</ul>
:ET