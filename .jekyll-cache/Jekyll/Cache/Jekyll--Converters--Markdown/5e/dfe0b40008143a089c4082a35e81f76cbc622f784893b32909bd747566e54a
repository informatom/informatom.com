I"∞<h2 id="das-javascript-framework-emberjs">Das Javascript Framework Ember.js</h2>

<p>Wie bereits im letzten Artikel angek√ºndigt, haben wir uns f√ºr ein
Javascript Framework entschieden: Ember.js (<a href="http://emberjs.com/">http://emberjs.com/</a>).</p>

<p>Bei Ember handelt es sich - nicht un√§hnlich zu Ruby on Rails - um ein
MVC Framework, nur dass dieses im Browser des Benutzers l√§uft und nicht
am Server.</p>

<p>Es gibt gravierende Unterschiede in den beiden Frameworks, sodass eine
steile Lernkurve auf uns wartet, die Vorteile der neuen Komponente
werden aber unseren Aufwand rechtfertigen.</p>

<p>Die wichtigsten Gr√ºnde f√ºr Ember und gegen die gro√üen anderen Javascript
Frameworks (wie Angular, Backbone, Meteor, Knockout, Dojo, React, ‚Ä¶)
sind f√ºr uns:</p>

<ul>
  <li>Der Projektleiter Yehuda Katz ist uns pers√∂nlich bekannt, wir haben
bei einer Rails Konferenz vor √ºber zwei Jahren in Berlin mit
ihm gesprochen. Seine Ank√ºndigungen von damals wurden vom
Projektteam von Ember.js nicht nur wahr gemacht,
sondern √ºbertroffen.</li>
  <li>Die stabile Version Ember.js 1.0 ist nun mehrere Monate im Umlauf
und ausreichend im Einsatz</li>
  <li>Die Dokumentation von Ember.js ist vollst√§nding (Guides + API) und
verst√§ndlich</li>
  <li>Die Rails - Integration von Ember.js mittels des Ember-Rails Gems
ist vom Ember.js Core Team unterst√ºtzt</li>
  <li>Yehuda Katz selbst war Ruby On Rails Core Entwickler und Lead
Entwickler von Ruby On Rails 3.0</li>
  <li>Die Firma hinter Ember.js, Tilde.io vertreibt als Hauptprodukt ein
Ruby On Rails Monitoring Service, Ruby On Rails Unterst√ºtzung ist
daher f√ºr die Zukunft gew√§hrleistet.</li>
  <li>Ember.js verfolgt den Framework Ansatz (im Gegensatz zu
einer Bibliothek) und ist von keinen weiteren Komponenten (au√üer
JQuery, das wir ohnehin f√ºr Ruby On Rails und Twitter Bootstrap
ben√∂tigen und verwenden) abh√§ngig.</li>
  <li>Der Hype um Ember.js ist wesentlich geringer als der um Angular oder
Meteor, es geht mehr um die Tauglichkeit im Business Einsatz als um
die Verwendung der neuesten Technologie</li>
  <li>Ember.js ist testbar</li>
  <li>Ember.js ist problemlos mit Bootstrap verwendbar, wir k√∂nnen bereits
Twitter Bootstrap 3 lernen und verwenden, ohne die Rails Applikation
zu st√∂ren.</li>
</ul>

<p>Wir werden im ersten Schritt die Vertragskalkulation in Ember.js
abbilden und erst dann die Ruby On Rails Integration in Angriff nehmen.</p>

<p>Die Datenmodelle, die war in Ruby On Rails ben√∂tigen, pflegen wir
synchron: Vertr√§ge, Vertragspositionen und Verbr√§uche.</p>

<p>Wir ben√∂tigen unmittelbar eine Datepickerkomponente zur bequemen Eingabe
von Daten, die wir uns selbst in Form eines Viewhelpers schreiben und
als JSBin unter <a href="http://emberjs.jsbin.com/sotuf/10/edit">http://emberjs.jsbin.com/sotuf/10/edit</a> ver√∂ffentlichen.</p>

<h3 id="datepicker">Datepicker</h3>

<hr />

<p><img src="/img/blog/jsbin.png" alt="JSBin" style="max-width: 100%" /></p>
<hr />

<p>Wir beschlie√üen, f√ºr‚Äôs erste keine Unittests zu schreiben, um die
Lernkurve flacher zu halten. Wir erstellen, wie √ºblich, die
Hobo-seitigen Modeltests.</p>

<p>Die √úbertragung s√§mtlicher Formeln aus einer Beispielkalkulation des
ersten Referenzkunden nach Javascript funktionieren problemlos. Die
Performance ist ausgezeichnet, das Gef√ºhl der Benutzer ist noch
unmittelbarer als bei fr√ºher verwendeten Excel-Sheets, da die Daten bei
jedem Tastendruck aktualisiert werden.</p>

<p>Wir verwenden wie √ºblich sprechende Variablennamen, womit die
Kalkulationen wesentlich einfacher zu verstehen sind, als in den
originalen Excel-Sheets mit ihren Zellenreferenzen.</p>

<p>F√ºr die Darstellung verwenden wir erstmals Bootstrap 3 und beschlie√üen
m√∂glichst bald auch den restlichen Shop zu Twitter Bootstrap 3 zu
aktualisieren. Hobo unterst√ºtzt derzeit allerdings nur Twitter Bootstrap
2.3.2.</p>

<p>Trotz des Umfangs des neu verwendeten Frameworks erreichen wir innerhalb
dieser Woche einen Fortschritt, der uns selbst √ºberrascht.</p>
:ET