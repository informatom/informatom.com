I"M<h2 id="crossselling-informationen-aus-bechlem">Crossselling Informationen aus Bechlem</h2>

<p>In den letzten 7 Tagen haben wir eine weitere Schnittstelle als Engine
und Gem entwickelt. Sie bezieht Crossselling Daten aus dem Webservice
Bechlem (<a href="http://www.bechlem.de/de/index.html">http://www.bechlem.de/de/index.html</a>), also zum Beispiel, die
Information welche Tintenpatronen f√ºr einen Drucker als Zubeh√∂r n√∂tig
sind.</p>

<p>Die Navigation haben wir in Form von Breadcrumbs ausgef√ºhrt, die
Kategorisierung basiert auf jener von Bechlem. Bechlem ist kein
unmittelbar verwendbares Webservice, sondern stellt den Download der
Daten in Form von CSV-Dateien zur Verf√ºgung. Diese Daten lesen wir per
Batch Job als Rake Task in eine MYSQL-Datenbank au√üerhalb der Mercator
Datenbank, die wir bei Bedarf in Echtzeit befragen. Wir haben damit rund
1.2 Millionen Relationen zwischen Produkten und Zubeh√∂rartikeln zur
Verf√ºgung, stellen aber nur jene Produkte dar, die auch tats√§chlich der
Kunde in seinem Produktkatalog hat.</p>

<p>Bechlem ist wieder als optionale Schnittstelle f√ºr Mercator ausgef√ºhrt,
wird also nur im Kundensystem installiert, falls der Kunde das Service
tats√§chlich in Anspruch nehmen will.</p>

<h3 id="crossselling">Crossselling</h3>

<hr />

<p><img src="/img/blog/crossselling.png" alt="Crossselling" style="max-width: 100%" /></p>
<hr />

<p>Sowohl die Bechlem Schnittstelle als auch Elasticsearch und die
Facettensuche sind auf das Demosystem ausgerollt.</p>

<p>Die Namensraumproblematik, die im letzten Bericht angesprochen war, hat
uns auch hier wieder getroffen. Durch manuelle Views und manuelle
Konfiguration der Routen konnten wir der Probleme Herr werden.</p>

<p>Das Einspielen der SQL Daten hat √ºberraschend Probleme bereitet, die
MYSQL Datenbank hat das Einspielen von Daten aus externen Dateien aus
Sicherheitsgr√ºnden verboten. Wir haben herausgefunden, dass es uns
m√∂glich ist, die Datenbankverbindung von Ruby On Rails Seite her so zu
parametrisierten, dass der Import in diese Datenbank zugelassen wird.</p>

<p>Weiters ist der MySQL-Client von Ruby On Rails standardm√§√üig im Modus
‚Äústrict‚Äù, was das Einf√ºgen von NULL-Werten aus CSV-Dateien
erschwert. Dieser Parameter ist zu l√∂schen, um einen reibungslosen
Import zu erm√∂glichen.</p>

<p>Nebenbei beherrschen wir nun auch den Download von FTP Servern und das
umgehen mit komprimierten Dateien innerhalb einer Ruby On Rails
Applikation.</p>

<h2 id="sicherheitsl√ºcke-elasticsearch">Sicherheitsl√ºcke Elasticsearch</h2>

<p>Die Standardinstallation von Elasticsearch, der Suchmaschine, die wir
f√ºr die Produktsuche und die Filterung der Produkteigenschaften
eingef√ºhrt haben, ist inh√§rent unsicher, die Suchmaschine erlaubt
Anfragen auf allen Netzwerkschnittstellen von beliebigen Adressen.
Nebenbei kann per Request beliebiger Code ausgef√ºhrt werden. Zusammen
mit dem Umstand, dass Elasticsearch authentifizierungslos ist, eine
sicherheitstechnische Katastrophe.</p>

<p>Als wir verd√§chtigen Netzwerkverkehr beobachtet haben, haben wir
unmittelbar recherchiert und entsprechende Sicherheitsvorkehrungen
getroffen. Nicht auszudenken, w√§re dies auf einem Produktivsystem
passiert.</p>

<p>Wir sind nun wieder alamiert und mehr um die Sicherheit der
Softwarekomponenten bem√ºht.</p>

<p>An und f√ºr sich bleibt Elasticsearch eine wesentliche Komponente f√ºr uns
mit gro√üem Potential, wir sind dabei die Produkt- und Kategoriensuche
von der Websitesuche, die in Hobo eingebaut ist, auf Elasticsearch
umstellen. Erste Tests versprechen eine deutliche
Geschwindigkeitssteigerung, nebenbei ist unsere Suche damit
tippfehlerresistent.</p>
:ET